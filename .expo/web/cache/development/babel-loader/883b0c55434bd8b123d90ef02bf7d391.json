{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/manmeetsingh/Desktop/Folio-React-Native/components/PostingList.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nvar PostingList = function (_React$Component) {\n  _inherits(PostingList, _React$Component);\n\n  var _super = _createSuper(PostingList);\n\n  function PostingList(props) {\n    var _this;\n\n    _classCallCheck(this, PostingList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      error: null,\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(PostingList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          error = _this$props.error,\n          isLoaded = _this$props.isLoaded,\n          posts = _this$props.posts;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 14\n          }\n        }, \" Error: \", error.message, \" \");\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 14\n          }\n        }, \" \");\n      } else {\n        return React.createElement(ScrollView, {\n          style: styles.container,\n          contentContainerStyle: styles.contentContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }]);\n\n  return PostingList;\n}(React.Component);\n\nexport { PostingList as default };","map":{"version":3,"sources":["/Users/manmeetsingh/Desktop/Folio-React-Native/components/PostingList.js"],"names":["React","ScrollView","PostingList","props","state","error","posts","isLoaded","message","styles","container","contentContainer","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,8BAA3B;;IACqBC,W;;;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;6BAEQ;AAAA,wBAE4B,KAAKH,KAFjC;AAAA,UAECE,KAFD,eAECA,KAFD;AAAA,UAEQE,QAFR,eAEQA,QAFR;AAAA,UAEkBD,KAFlB,eAEkBA,KAFlB;;AAGP,UAAID,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAcA,KAAK,CAACG,OAApB,MAAP;AACD,OAFD,MAEO,IAAI,CAACD,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,OAFM,MAEA;AACL,eACE,oBAAC,UAAD;AACE,UAAA,KAAK,EAAEE,MAAM,CAACC,SADhB;AAEE,UAAA,qBAAqB,EAAED,MAAM,CAACE,gBAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;AACF;;;;EAnCsCX,KAAK,CAACY,S;;SAA1BV,W","sourcesContent":["import * as React from \"react\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nexport default class PostingList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      posts: [],\n    };\n  }\n\n  render() {\n    //this.loadPosts();\n    const { error, isLoaded, posts } = this.props;\n    if (error) {\n      return <div> Error: {error.message} </div>;\n    } else if (!isLoaded) {\n      return <div> </div>;\n    } else {\n      return (\n        <ScrollView\n          style={styles.container}\n          contentContainerStyle={styles.contentContainer}\n        ></ScrollView>\n        // <div className=\"posts\">\n        //   {posts.map((post) => (\n        //     <Post\n        //       key={post.post_id}\n        //       post={post}\n        //       type={this.props.type}\n        //       notifcount={this.props.notifcount}\n        //       notificationid={this.props.notificationid}\n        //     />\n        //   ))}\n        // </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}