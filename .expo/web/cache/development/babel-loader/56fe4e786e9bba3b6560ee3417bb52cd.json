{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React from \"react\";\n// import \"../App.css\";\n// import \"../css/modal.css\";\n// import \"../css/postform.css\";\n// import PropTypes from \"prop-types\";\n\n// const urlRegex = new RegExp(\n//   /(?:(?:https?:\\/\\/))[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b(?:[-a-zA-Z0-9@:%_\\+.~#?&\\/=]*(\\.jpg|\\.png|\\.jpeg))/g\n// );\n\n// const formValid = ({ formErrors, ...rest }) => {\n//   let valid = true;\n\n//   Object.values(formErrors).forEach((val) => {\n//     val.length > 0 && (valid = false);\n//   });\n\n//   Object.values(rest).forEach((val) => {\n//     val === null && (valid = false);\n//   });\n\n//   return valid;\n// };\n\n// export default class PostForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       title: \"\",\n//       caption: \"\",\n//       tag: \"\",\n//       apiReturnMessage: \"\",\n//       url: \"\",\n//       isDisabled: true,\n\n//       formErrors: {\n//         title: \"\",\n//         caption: \"\",\n//         tag: \"\",\n//         url: \"\",\n//       },\n//     };\n//   }\n\n//   onClose = (e) => {\n//     this.props.onClose && this.props.onClose(e);\n//   };\n\n//   createPost = (event) => {\n//     this.state.title = this.state.title.concat(\"~@~\");\n//     this.state.caption = this.state.title.concat(this.state.caption);\n\n//     //keep the form from actually submitting\n//     event.preventDefault();\n\n//     if (formValid(this.state)) {\n//       //make the api call to the authentication page\n//       fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n//         method: \"post\",\n//         body: JSON.stringify({\n//           action: \"addOrEditPosts\",\n//           user_id: sessionStorage.getItem(\"user\"),\n//           userid: sessionStorage.getItem(\"user\"),\n//           session_token: sessionStorage.getItem(\"token\"),\n//           posttext: this.state.caption,\n//           postpicurl: this.state.url,\n//           posttype: this.state.tag,\n//         }),\n//       })\n//         .then((res) => res.json())\n//         .then(\n//           (result) => {\n//             this.setState({\n//               apiReturnMessage: result.Status,\n//               // post_id: result.Status.slice(-2)\n//             });\n\n//             // this.addTitle();\n//             // this.addTag();\n\n//             this.props.loadPosts();\n//             this.onClose();\n//             // window.location.reload(false);\n//           },\n//           (error) => {}\n//         );\n//     }\n//   };\n\n//   handleChange(e) {\n//     e.preventDefault();\n//     const { name, value } = e.target;\n//     let formErrors = this.state.formErrors;\n\n//     switch (name) {\n//       case \"title\":\n//         formErrors.title = value.length < 2 ? \"Required\" : \"\";\n//         break;\n//       case \"caption\":\n//         formErrors.caption = value.length < 2 ? \"Required\" : \"\";\n//         break;\n//       case \"tag\":\n//         formErrors.tag = value === \"\" ? \"Required\" : \"\";\n//         break;\n//       case \"url\":\n//         formErrors.url = urlRegex.test(value) ? \"\" : \"invalid image URL\";\n//         break;\n//       default:\n//         break;\n//     }\n\n//     this.setState({ formErrors, [name]: value });\n\n//     this.setState({ formErrors, isDisabled: !formValid(this.state) });\n//   }\n\n//   render() {\n//     if (!this.props.show) {\n//       return null;\n//     }\n\n//     const { formErrors } = this.state;\n\n//     return (\n//       <div id=\"myModal\" className=\"modal\">\n//         <div className=\"modal-content\">\n//           <div className=\"modal-header\">\n//             <span className=\"close\" onClick={this.onClose}>\n//               &times;\n//             </span>\n//             <h2>Upload a new project</h2>\n//           </div>\n//           <div className=\"modal-body\">\n//             <div id=\"modalcontent\">\n//               <form onSubmit={this.createPost}>\n//                 <div className=\"data-input\">\n//                   <div className=\"data-label\">Name of the Project: </div>\n//                   <input\n//                     className={formErrors.title.length > 0 ? \"error\" : null}\n//                     name=\"title\"\n//                     placeholder=\"Project Name\"\n//                     onChange={(e) => this.handleChange(e)}\n//                   ></input>\n//                   {formErrors.title.length > 0 && (\n//                     <span className=\"error-message\">{formErrors.title}</span>\n//                   )}\n//                 </div>\n\n//                 <div className=\"data-input\">\n//                   <div className=\"data-label\">Caption: </div>\n//                   <textarea\n//                     className={formErrors.caption.length > 0 ? \"error\" : null}\n//                     type=\"text\"\n//                     name=\"caption\"\n//                     placeholder=\"What's this project about?\"\n//                     onChange={(e) => this.handleChange(e)}\n//                   />\n//                   {formErrors.caption.length > 0 && (\n//                     <span className=\"error-message\">{formErrors.caption}</span>\n//                   )}\n//                 </div>\n\n//                 <div className=\"data-input\">\n//                   <div className=\"data-label\">Collaborators: </div>\n//                   <input\n//                     name=\"collab\"\n//                     placeholder=\"Collaborators (Optional)\"\n//                     onChange={(e) => this.handleChange(e)}\n//                   ></input>\n//                 </div>\n\n//                 <div className=\"data-input\">\n//                   <div className=\"data-label\">Tags: </div>\n//                   <select\n//                     className={formErrors.tag.length > 0 ? \"error\" : null}\n//                     name=\"tag\"\n//                     onChange={(e) => this.handleChange(e)}\n//                   >\n//                     <option value=\"\">Select...</option>\n//                     <option value=\"Art\">Art</option>\n//                     <option value=\"Code\">Code</option>\n//                     <option value=\"Music\">Music</option>\n//                     <option value=\"Film\">Film</option>\n//                     <option value=\"Writing\">Writing</option>\n//                   </select>\n//                   {formErrors.tag.length > 0 && (\n//                     <span className=\"error-message\">{formErrors.tag}</span>\n//                   )}\n//                 </div>\n\n//                 <div className=\"data-input\">\n//                   <div className=\"data-label\">URL To Picture: </div>\n//                   <input\n//                     className={formErrors.url.length > 0 ? \"error\" : null}\n//                     name=\"url\"\n//                     placeholder=\"URL\"\n//                     onChange={(e) => this.handleChange(e)}\n//                   ></input>\n//                   {formErrors.url.length > 0 && (\n//                     <span className=\"error-message\">{formErrors.url}</span>\n//                   )}\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n\n//           <div className=\"modal-footer\">\n//             <button\n//               type=\"submit\"\n//               disabled={this.state.isDisabled}\n//               className=\"button post-button\"\n//               onClick={this.createPost}\n//             >\n//               <span>Post</span>\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"script"}