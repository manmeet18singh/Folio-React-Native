{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/manmeetsingh/Desktop/Folio-React-Native/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport { LinearGradient } from \"react-native-svg\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onSubmit = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/SocialAuth.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          action: \"login\",\n          username: email,\n          password: password\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log(\"Logging in with session token: \" + json.user.session_token);\n        SecureStore.setItemAsync(\"session\", json.user.session_token).then(function () {\n          _this.props.route.params.onLoggedIn();\n        });\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/images/logo.png\"),\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        placeholder: \"Email Address\",\n        value: email,\n        textContentType: \"emailAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"Password\",\n        value: password,\n        textContentType: \"password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: function onPress() {\n          return _this2.onSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, React.createElement(LinearGradient, {\n        colors: [\"#43D4FF\", \"#38ABFD\", \"#2974FA\"],\n        style: styles.grad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\",\n    padding: 30\n  },\n  logo: {\n    alignSelf: \"center\",\n    width: 210,\n    height: 130,\n    resizeMode: \"contain\",\n    marginBottom: 40\n  },\n  input: {\n    height: 50,\n    borderColor: \"#DBDBDB\",\n    borderWidth: 1,\n    marginBottom: 20,\n    borderRadius: 5,\n    padding: 10\n  },\n  loginButton: {\n    height: 50\n  },\n  grad: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/manmeetsingh/Desktop/Folio-React-Native/screens/LoginScreen.js"],"names":["React","SecureStore","Colors","LinearGradient","LoginScreen","props","onSubmit","state","email","password","fetch","method","body","JSON","stringify","action","username","then","response","json","console","log","user","session_token","setItemAsync","route","params","onLoggedIn","styles","container","require","logo","input","text","setState","loginButton","grad","color","Component","StyleSheet","create","flex","backgroundColor","padding","alignSelf","width","height","resizeMode","marginBottom","borderColor","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Image } from \"react-native\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport { LinearGradient } from \"react-native-svg\";\n\nexport default class LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize our login state\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n\n    // console.log(props);\n  }\n  // On our button press, attempt to login\n  // this could use some error handling!\n  onSubmit = () => {\n    const { email, password } = this.state;\n\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/SocialAuth.php\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        action: \"login\",\n        username: email,\n        password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(\n          `Logging in with session token: ${json.user.session_token}`\n        );\n\n        // enter login logic here\n        SecureStore.setItemAsync(\"session\", json.user.session_token).then(\n          () => {\n            this.props.route.params.onLoggedIn();\n          }\n        );\n      });\n  };\n  render() {\n    const { email, password } = this.state;\n\n    // this could use some error handling!\n    // the user will never know if the login failed.\n    return (\n      <View style={styles.container}>\n        <Image\n          source={require(\"../assets/images/logo.png\")}\n          style={styles.logo}\n        />\n        <TextInput\n          style={styles.input}\n          onChangeText={(text) => this.setState({ email: text })}\n          placeholder=\"Email Address\"\n          value={email}\n          textContentType=\"emailAddress\"\n        />\n        <TextInput\n          style={styles.input}\n          onChangeText={(text) => this.setState({ password: text })}\n          placeholder=\"Password\"\n          value={password}\n          textContentType=\"password\"\n          secureTextEntry={true}\n        />\n        <TouchableOpacity\n          style={styles.loginButton}\n          onPress={() => this.onSubmit()}\n        >\n          <LinearGradient\n            colors={[\"#43D4FF\", \"#38ABFD\", \"#2974FA\"]}\n            style={styles.grad}\n          >\n            <Text style={{ color: \"white\" }}>Submit</Text>\n          </LinearGradient>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\n// Our stylesheet, referenced by using styles.container or styles.loginText (style.property)\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\",\n    padding: 30,\n  },\n  logo: {\n    // flex: 1,\n    alignSelf: \"center\",\n    width: 210,\n    height: 130,\n    resizeMode: \"contain\",\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    borderColor: \"#DBDBDB\",\n    borderWidth: 1,\n    marginBottom: 20,\n    borderRadius: 5,\n    padding: 10,\n  },\n  loginButton: {\n    height: 50,\n    // width: \"50%\",\n    // alignSelf: \"center\",\n    // borderRadius: 5,\n    // alignItems: \"center\",\n    // padding: 15,\n  },\n  grad: {\n    flex: 1,\n    // height: 50,\n    // width: 160,\n    // alignSelf: \"center\",\n    // borderRadius: 5,\n    // alignItems: \"center\",\n    // padding: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}