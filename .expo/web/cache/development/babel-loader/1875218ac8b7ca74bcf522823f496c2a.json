{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/manmeetsingh/Desktop/Folio-React-Native/screens/OTPScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport * as SecureStore from \"expo-secure-store\";\n\nvar OTPScreen = function (_React$Component) {\n  _inherits(OTPScreen, _React$Component);\n\n  var _super = _createSuper(OTPScreen);\n\n  function OTPScreen(props) {\n    var _this;\n\n    _classCallCheck(this, OTPScreen);\n\n    _this = _super.call(this, props);\n\n    _this.setPass = function () {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/SocialAuth.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"setpassword\",\n          email_addr: _this.state.email,\n          token: _this.state.otp,\n          newpassword: _this.state.password,\n          confirmpassword: _this.state.confirmpass\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        return fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/SocialAuth.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"login\",\n            username: _this.state.email,\n            password: _this.state.password\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (result) {\n          if (result.user) {\n            SecureStore.setItemAsync(\"session\", result.user.session_token).then(function () {\n              SecureStore.setItemAsync(\"user\", result.user.user_id).then(function () {\n                _this.props.route.params.onLoggedIn();\n\n                _this.props.navigation.navigate(\"Root\");\n              });\n            });\n          } else {\n            _this.setState({\n              loginMessage: result.message\n            });\n          }\n        });\n      }, function (error) {});\n    };\n\n    _this.state = {\n      email: \"\",\n      validEmail: true,\n      errorMessage: \"\",\n      password: \"\",\n      loginMessage: \"\",\n      otp: \"\",\n      confirmpass: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(OTPScreen, [{\n    key: \"validate\",\n    value: function validate(text, confirmPass, type) {\n      var emailRegex = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\n      if (type == \"email\") {\n        if (emailRegex.test(text)) {\n          this.setState({\n            validEmail: true,\n            errorMessage: \"\",\n            email: text\n          });\n        } else {\n          this.setState({\n            validEmail: false,\n            errorMessage: \"Invalid Email\",\n            email: \"\"\n          });\n        }\n      } else {\n        if (text == confirmPass) {\n          this.setState({\n            errorMessage: \"\",\n            password: text,\n            confirmpass: confirmPass\n          });\n        } else {\n          this.setState({\n            errorMessage: \"Your Passwords Don't Match\",\n            password: \"\",\n            confirmpass: \"\"\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/images/logo.png\"),\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: [styles.input, !this.state.validEmail ? styles.inputError : null],\n        onChangeText: function onChangeText(text) {\n          return _this2.validate(text);\n        },\n        placeholder: \"Email Address\",\n        textContentType: \"emailAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, this.state.errorMessage), React.createElement(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"OTP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, this.state.loginMessage), React.createElement(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"Password\",\n        textContentType: \"password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, this.state.loginMessage), React.createElement(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"Confirm Password\",\n        textContentType: \"password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, this.state.loginMessage), React.createElement(KeyboardAvoidingView, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, React.createElement(LinearGradient, {\n        colors: [\"#eca400\", \"#da2c38\"],\n        start: {\n          x: 0.0,\n          y: 1.0\n        },\n        end: {\n          x: 1.0,\n          y: 1.0\n        },\n        style: styles.loginBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.loginContainer,\n        onPress: function onPress() {\n          return _this2.login();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, \"Let's Start!\")))));\n    }\n  }]);\n\n  return OTPScreen;\n}(React.Component);\n\nexport { OTPScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\",\n    padding: 30\n  },\n  logo: {\n    alignSelf: \"center\",\n    width: 210,\n    height: 130,\n    resizeMode: \"contain\",\n    marginBottom: 40\n  },\n  input: {\n    height: 50,\n    borderColor: \"#DBDBDB\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10\n  },\n  inputError: {\n    borderColor: \"#DA2C38\"\n  },\n  errorMessage: {\n    color: \"#DA2C38\",\n    padding: 5\n  },\n  buttonContainer: {\n    flexDirection: \"row\"\n  },\n  loginContainer: {\n    width: \"98%\",\n    height: \"85%\",\n    borderRadius: 6,\n    backgroundColor: \"white\",\n    alignItems: \"center\"\n  },\n  loginText: {\n    textAlign: \"center\",\n    color: \"#eca400\",\n    padding: 6,\n    fontSize: 20\n  },\n  loginBtn: {\n    height: 50,\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    alignSelf: \"flex-end\"\n  },\n  forgot: {\n    padding: 25,\n    alignSelf: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/manmeetsingh/Desktop/Folio-React-Native/screens/OTPScreen.js"],"names":["React","LinearGradient","SecureStore","OTPScreen","props","setPass","fetch","method","body","JSON","stringify","action","email_addr","state","email","token","otp","newpassword","password","confirmpassword","confirmpass","then","res","json","result","username","user","setItemAsync","session_token","user_id","route","params","onLoggedIn","navigation","navigate","setState","loginMessage","message","error","validEmail","errorMessage","text","confirmPass","type","emailRegex","test","styles","container","require","logo","input","inputError","validate","buttonContainer","x","y","loginBtn","loginContainer","login","loginText","Component","StyleSheet","create","flex","backgroundColor","padding","alignSelf","width","height","resizeMode","marginBottom","borderColor","borderWidth","borderRadius","color","flexDirection","alignItems","textAlign","fontSize","justifyContent","forgot","fontWeight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { Image } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport * as SecureStore from \"expo-secure-store\";\n\nexport default class OTPScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      validEmail: true,\n      errorMessage: \"\",\n      password: \"\",\n      loginMessage: \"\",\n      otp: \"\",\n      confirmpass: \"\",\n    };\n  }\n  validate(text, confirmPass, type) {\n    let emailRegex = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    if (type == \"email\") {\n      if (emailRegex.test(text)) {\n        this.setState({\n          validEmail: true,\n          errorMessage: \"\",\n          email: text,\n        });\n      } else {\n        this.setState({\n          validEmail: false,\n          errorMessage: \"Invalid Email\",\n          email: \"\",\n        });\n      }\n    } else {\n      if (text == confirmPass) {\n        this.setState({\n          errorMessage: \"\",\n          password: text,\n          confirmpass: confirmPass,\n        });\n      } else {\n        this.setState({\n          errorMessage: \"Your Passwords Don't Match\",\n          password: \"\",\n          confirmpass: \"\",\n        });\n      }\n    }\n  }\n\n  setPass = () => {\n    //keep the form from actually submitting\n\n    //make the api call to the authentication page\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/SocialAuth.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"setpassword\",\n        email_addr: this.state.email,\n        token: this.state.otp,\n        newpassword: this.state.password,\n        confirmpassword: this.state.confirmpass,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          return fetch(\n            \"http://stark.cse.buffalo.edu/cse410/atam/api/SocialAuth.php\",\n            {\n              method: \"post\",\n              body: JSON.stringify({\n                action: \"login\",\n                username: this.state.email,\n                password: this.state.password,\n              }),\n            }\n          )\n            .then((res) => res.json())\n            .then((result) => {\n              if (result.user) {\n                SecureStore.setItemAsync(\n                  \"session\",\n                  result.user.session_token\n                ).then(() => {\n                  SecureStore.setItemAsync(\"user\", result.user.user_id).then(\n                    () => {\n                      this.props.route.params.onLoggedIn();\n                      this.props.navigation.navigate(\"Root\");\n                    }\n                  );\n                });\n              } else {\n                this.setState({\n                  loginMessage: result.message,\n                });\n              }\n            });\n        },\n        (error) => {}\n      );\n  };\n\n  render() {\n    return (\n      <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n        <Image\n          source={require(\"../assets/images/logo.png\")}\n          style={styles.logo}\n        />\n        <TextInput\n          style={[\n            styles.input,\n            !this.state.validEmail ? styles.inputError : null,\n          ]}\n          onChangeText={(text) => this.validate(text)}\n          placeholder=\"Email Address\"\n          textContentType=\"emailAddress\"\n        />\n        <Text style={styles.errorMessage}>{this.state.errorMessage}</Text>\n        <TextInput\n          style={styles.input}\n          onChangeText={(text) => this.setState({ password: text })}\n          placeholder=\"OTP\"\n        />\n        <Text style={styles.errorMessage}>{this.state.loginMessage}</Text>\n        <TextInput\n          style={styles.input}\n          onChangeText={(text) => this.setState({ password: text })}\n          placeholder=\"Password\"\n          textContentType=\"password\"\n          secureTextEntry={true}\n        />\n        <Text style={styles.errorMessage}>{this.state.loginMessage}</Text>\n        <TextInput\n          style={styles.input}\n          onChangeText={(text) => this.setState({ password: text })}\n          placeholder=\"Confirm Password\"\n          textContentType=\"password\"\n          secureTextEntry={true}\n        />\n        <Text style={styles.errorMessage}>{this.state.loginMessage}</Text>\n        <KeyboardAvoidingView style={styles.buttonContainer}>\n          <LinearGradient\n            colors={[\"#eca400\", \"#da2c38\"]}\n            start={{ x: 0.0, y: 1.0 }}\n            end={{ x: 1.0, y: 1.0 }}\n            style={styles.loginBtn}\n          >\n            <TouchableOpacity\n              style={styles.loginContainer}\n              onPress={() => this.login()}\n            >\n              <Text style={styles.loginText}>Let's Start!</Text>\n            </TouchableOpacity>\n          </LinearGradient>\n        </KeyboardAvoidingView>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\",\n    padding: 30,\n  },\n  logo: {\n    alignSelf: \"center\",\n    width: 210,\n    height: 130,\n    resizeMode: \"contain\",\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    borderColor: \"#DBDBDB\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n  },\n  inputError: {\n    borderColor: \"#DA2C38\",\n  },\n  errorMessage: {\n    color: \"#DA2C38\",\n    padding: 5,\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n  },\n  loginContainer: {\n    width: \"98%\",\n    height: \"85%\",\n    borderRadius: 6,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n  },\n  loginText: {\n    textAlign: \"center\",\n    color: \"#eca400\",\n    padding: 6,\n    fontSize: 20,\n  },\n  loginBtn: {\n    height: 50,\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    alignSelf: \"flex-end\",\n  },\n  forgot: {\n    padding: 25,\n    alignSelf: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}