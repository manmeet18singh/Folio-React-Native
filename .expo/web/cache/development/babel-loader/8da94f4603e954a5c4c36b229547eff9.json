{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/manmeetsingh/Desktop/Folio-React-Native/screens/HomeScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { MonoText } from \"../components/StyledText\";\nimport PostingList from \"../components/PostingList.js\";\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this);\n\n    _this.loadPosts = function () {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getPosts\"\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        if (result.posts) {\n          _this.setState({\n            isLoaded: true,\n            posts: result.posts\n          });\n        }\n      }, function (error) {\n        _this.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n      setTimeout(function () {\n        _this.loadPosts();\n      }, 60000);\n    };\n\n    _this.state = {\n      isLoaded: true,\n      posts: result.posts,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(PostingList, {\n        posts: this.state.posts,\n        error: this.state.error,\n        isLoaded: this.state.isLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport { HomeScreen as default };\nHomeScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\"\n  },\n  contentContainer: {\n    padding: 20\n  },\n  card: {\n    width: \"100%\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 2,\n    elevation: 2,\n    backgroundColor: \"white\",\n    padding: 10,\n    marginBottom: 10\n  },\n  cardTitle: {\n    fontSize: 20,\n    marginBottom: 10\n  },\n  cardDescription: {\n    fontSize: 12\n  }\n});","map":{"version":3,"sources":["/Users/manmeetsingh/Desktop/Folio-React-Native/screens/HomeScreen.js"],"names":["React","MonoText","PostingList","HomeScreen","loadPosts","fetch","method","body","JSON","stringify","action","then","res","json","result","posts","setState","isLoaded","error","setTimeout","state","styles","container","Component","navigationOptions","header","StyleSheet","create","flex","backgroundColor","contentContainer","padding","card","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginBottom","cardTitle","fontSize","cardDescription"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;AAUA,SAASC,QAAT;AACA,OAAOC,WAAP;;IAEqBC,U;;;;;AACnB,wBAAc;AAAA;;AAAA;;AACZ;;AADY,UAcdC,SAdc,GAcF,YAAM;AAChBC,MAAAA,KAAK,CAAC,iEAAD,EAAoE;AACvEC,QAAAA,MAAM,EAAE,MAD+D;AAEvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE;AADW,SAAf;AAFiE,OAApE,CAAL,CAMGC,IANH,CAMQ,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OANR,EAOGF,IAPH,CAQI,UAACG,MAAD,EAAY;AACV,YAAIA,MAAM,CAACC,KAAX,EAAkB;AAChB,gBAAKC,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,IADE;AAEZF,YAAAA,KAAK,EAAED,MAAM,CAACC;AAFF,WAAd;AAID;AACF,OAfL,EAgBI,UAACG,KAAD,EAAW;AACT,cAAKF,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEA;AAFK,SAAd;AAID,OArBL;AAuBAC,MAAAA,UAAU,CAAC,YAAM;AACf,cAAKf,SAAL;AACD,OAFS,EAEP,KAFO,CAAV;AAGD,KAzCa;;AAGZ,UAAKgB,KAAL,GAAa;AACXH,MAAAA,QAAQ,EAAE,IADC;AAEXF,MAAAA,KAAK,EAAED,MAAM,CAACC,KAFH;AAGXG,MAAAA,KAAK,EAAE;AAHI,KAAb;AAHY;AAQb;;;;wCAEmB;AAClB,WAAKd,SAAL;AACD;;;6BA+BQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEiB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWL,KADpB;AAEE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWH,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EAtDqCjB,KAAK,CAACuB,S;;SAAzBpB,U;AAyDrBA,UAAU,CAACqB,iBAAX,GAA+B;AAC7BC,EAAAA,MAAM,EAAE;AADqB,CAA/B;AAIA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,OAAO,EAAE;AADO,GALa;AAQ/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,WAAW,EAAE,MAFT;AAGJC,IAAAA,YAAY,EAAE;AAAEF,MAAAA,KAAK,EAAE,CAAT;AAAYG,MAAAA,MAAM,EAAE;AAApB,KAHV;AAIJC,IAAAA,aAAa,EAAE,GAJX;AAKJC,IAAAA,YAAY,EAAE,CALV;AAMJC,IAAAA,SAAS,EAAE,CANP;AAOJV,IAAAA,eAAe,EAAE,OAPb;AAQJE,IAAAA,OAAO,EAAE,EARL;AASJS,IAAAA,YAAY,EAAE;AATV,GARyB;AAmB/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETF,IAAAA,YAAY,EAAE;AAFL,GAnBoB;AAuB/BG,EAAAA,eAAe,EAAE;AACfD,IAAAA,QAAQ,EAAE;AADK;AAvBc,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\nimport {\n  Image,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nimport { MonoText } from \"../components/StyledText\";\nimport PostingList from \"../components/PostingList.js\";\n\nexport default class HomeScreen extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoaded: true,\n      posts: result.posts,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadPosts();\n  }\n\n  loadPosts = () => {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/atam/api/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.posts) {\n            this.setState({\n              isLoaded: true,\n              posts: result.posts,\n            });\n          }\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: error,\n          });\n        }\n      );\n    setTimeout(() => {\n      this.loadPosts();\n    }, 60000);\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <PostingList\n          posts={this.state.posts}\n          error={this.state.error}\n          isLoaded={this.state.isLoaded}\n        />\n      </View>\n    );\n  }\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\",\n  },\n  contentContainer: {\n    padding: 20,\n  },\n  card: {\n    width: \"100%\",\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.5,\n    shadowRadius: 2,\n    elevation: 2,\n    backgroundColor: \"white\",\n    padding: 10,\n    marginBottom: 10,\n  },\n  cardTitle: {\n    fontSize: 20,\n    marginBottom: 10,\n  },\n  cardDescription: {\n    fontSize: 12,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}